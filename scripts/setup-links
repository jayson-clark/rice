#!/usr/bin/env bash
set -euo pipefail

# Config
REPO_DIR="${REPO_DIR:-../}"        # allow override
MAP_FILE="${MAP_FILE:-$REPO_DIR/links.map}"
BACKUP_DIR="${BACKUP_DIR:-$HOME/.dotfiles_backup_$(date +%Y%m%d_%H%M%S)}"
DRY_RUN="${DRY_RUN:-0}"                       # set to 1 to preview

# Helpers
trim() { sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'; }
msg()  { printf '%s\n' "$*"; }
die()  { printf 'ERROR: %s\n' "$*" >&2; exit 1; }

[ -f "$MAP_FILE" ] || die "Map file not found: $MAP_FILE"

backup() {
  local target="$1"
  mkdir -p "$BACKUP_DIR$(dirname "$target")"
  mv "$target" "$BACKUP_DIR$target"
  msg "Backed up $target -> $BACKUP_DIR$target"
}

# Process map
while IFS= read -r raw || [ -n "$raw" ]; do
  line="$(printf '%s' "$raw" | trim)"
  # Skip comments/blank
  [[ -z "$line" || "$line" =~ ^# ]] && continue

  # Split "src => dst"
  src="${line%%=>*}"; dst="${line#*=>}"
  src="$(printf '%s' "$src" | trim)"
  dst="$(printf '%s' "$dst" | trim)"

  # Resolve paths
  src_abs="$REPO_DIR/$src"
  dst_abs="$HOME/$dst"

  [ -e "$src_abs" ] || die "Source missing: $src_abs"

  # Ensure parent dir exists
  dst_dir="$(dirname "$dst_abs")"
  [ "$DRY_RUN" -eq 1 ] || mkdir -p "$dst_dir"

  # Handle existing target
  if [ -e "$dst_abs" ] || [ -L "$dst_abs" ]; then
    # If already correct symlink, skip
    if [ -L "$dst_abs" ] && [ "$(readlink -f "$dst_abs")" = "$(readlink -f "$src_abs")" ]; then
      msg "✓ Already linked: ~/$dst"
      continue
    fi
    # Backup anything that isn't the desired link
    if [ "$DRY_RUN" -eq 0 ]; then
      backup "$dst_abs"
    else
      msg "(dry-run) Would backup ~/$dst"
    fi
  fi

  # Create relative symlink (GNU ln supports -r on Arch)
  if [ "$DRY_RUN" -eq 1 ]; then
    msg "(dry-run) ln -srf '$src_abs' '$dst_abs'"
  else
    ln -srf "$src_abs" "$dst_abs"
    msg "→ Linked ~/$dst -> $src"
  fi
done < "$MAP_FILE"

msg "Done."
[ "$DRY_RUN" -eq 1 ] && msg "This was a dry run. Set DRY_RUN=0 to apply."
